<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TowerDefenseGame</name>
    </assembly>
    <members>
        <member name="T:TowerDefenseGame.TowerDefenseControl">
            <summary>
            Class for handling the user interactions
            </summary>
        </member>
        <member name="P:TowerDefenseGame.TowerDefenseControl.Model">
            <summary>
            model property
            </summary>
        </member>
        <member name="M:TowerDefenseGame.TowerDefenseControl.#ctor(System.String)">
            <summary>
            Constructor of the Control class
            </summary>
            <param name="userName">Name if the player</param>
        </member>
        <member name="M:TowerDefenseGame.TowerDefenseControl.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the game items
            </summary>
            <param name="drawingContext"></param>
        </member>
        <member name="T:TowerDefenseGame.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:TowerDefenseGame.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:TowerDefenseGame.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:TowerDefenseGame.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:TowerDefenseGame.MainWindow.#ctor">
            <summary>
            Initialization
            </summary>
        </member>
        <member name="M:TowerDefenseGame.MainWindow.MainWindow_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            If the window is closed during a game, its state will be saved
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TowerDefenseGame.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:TowerDefenseGame.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TowerDefenseGame.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TowerDefenseGame.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
